/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module value_store_1 (
    input btna,
    input btnb,
    input [15:0] values,
    input clk,
    input rst,
    output reg [15:0] outA,
    output reg [15:0] outB
  );
  
  
  
  wire [1-1:0] M_detectorA_out;
  reg [1-1:0] M_detectorA_in;
  edge_detector_2 detectorA (
    .clk(clk),
    .in(M_detectorA_in),
    .out(M_detectorA_out)
  );
  
  wire [1-1:0] M_detectorB_out;
  reg [1-1:0] M_detectorB_in;
  edge_detector_2 detectorB (
    .clk(clk),
    .in(M_detectorB_in),
    .out(M_detectorB_out)
  );
  
  wire [1-1:0] M_conditionerA_out;
  button_conditioner_3 conditionerA (
    .clk(clk),
    .in(btna),
    .out(M_conditionerA_out)
  );
  
  wire [1-1:0] M_conditionerB_out;
  button_conditioner_3 conditionerB (
    .clk(clk),
    .in(btnb),
    .out(M_conditionerB_out)
  );
  
  reg [15:0] M_flipA_d, M_flipA_q = 1'h0;
  
  reg [15:0] M_flipB_d, M_flipB_q = 1'h0;
  
  always @* begin
    M_flipA_d = M_flipA_q;
    M_flipB_d = M_flipB_q;
    
    M_detectorA_in = M_conditionerA_out;
    M_detectorB_in = M_conditionerB_out;
    if (M_detectorA_out) begin
      M_flipA_d = values;
    end
    if (M_detectorB_out) begin
      M_flipB_d = values;
    end
    outA = M_flipA_q;
    outB = M_flipB_q;
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_flipA_q <= 1'h0;
    end else begin
      M_flipA_q <= M_flipA_d;
    end
  end
  
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_flipB_q <= 1'h0;
    end else begin
      M_flipB_q <= M_flipB_d;
    end
  end
  
endmodule
